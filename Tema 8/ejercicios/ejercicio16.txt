#include <iostream>
#include <string>
#include "lista.h"
using namespace std;

void calcular( Lista<int> l1, Lista<int>l2){
	
	Lista<int> resultado;
	int acarreo=0;
	int l11=l1.longitud()-1;
	int l22=l2.longitud()-1;
	while (l11>=0 && l22>=0){
		int valor1= l1.elem(l11);
		int valor2= l2.elem(l22);
		int total= valor1+valor2+acarreo;
		if (total>9)
			acarreo=1;
		else
			acarreo=0;
		total=total%10;
		resultado.pon_ppio(total);
		l1.quita_final();
		l2.quita_final();
		l11--;
		l22--;
	}
	if (l11>=0){
		while (l11>=0){
			int total= l1.elem(l11)+acarreo;
			if (total>9)
				acarreo=1;
			else
				acarreo=0;
		total=total%10;
		resultado.pon_ppio(total);
		l1.quita_final();
		l11--;
		}

	}
	else{
		while (l22>=0){
			int total= l2.elem(l22)+acarreo;
			if (total>9)
				acarreo=1;
			else
				acarreo=0;
		total=total%10;
		resultado.pon_ppio(total);
		l2.quita_final();
		l22--;
		}
	}
	//mostramos el resultado
	Lista<int>::ConstIterator actual= resultado.cbegin();
	Lista<int>::ConstIterator final= resultado.cend();
	while (actual!=final){
		cout << actual.elem() <<" ";
		actual.next();
	}

	cout << endl;
}

int main() {
	Lista<int> l1;
	Lista<int> l2;
	
	l1.pon_final(1);
	l1.pon_final(2);
	l1.pon_final(8);
	l1.pon_final(3);
	l1.pon_final(5);
	l1.pon_final(9);
	l1.pon_final(7);
	l1.pon_final(5);

	l2.pon_final(2);
	l2.pon_final(3);
	l2.pon_final(5);
	l2.pon_final(6);
	l2.pon_final(5);
	calcular (l1,l2);
    system ("pause");
    return 0;
}
